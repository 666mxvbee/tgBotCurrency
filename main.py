import requests
import xml.etree.ElementTree as ET
from datetime import datetime,timedelta
from aiogram import types,Bot,executor,Dispatcher
from configg import token
from aiogram.dispatcher.filters import Command, Text

current_date = datetime.today()
url = f'http://www.cbr.ru/scripts/XML_daily.asp?date_req={current_date.strftime("%d/%m/%Y")}'
response = requests.get(url)
tree = ET.fromstring(response.content)
res = []
for currency in tree.findall('Valute'):
    name = currency.find('Name').text
    value = currency.find('Value').text
    res.append({'Name':name,'Value':value})


new_date = (datetime.today())-timedelta(days=30)
url1 = f'http://www.cbr.ru/scripts/XML_daily.asp?date_req={new_date.strftime("%d/%m/%Y")}'
response1 = requests.get(url1)
tree1 = ET.fromstring(response1.content)
res1 = []
for currencyback in tree1.findall('Valute'):
    namelast = currencyback.find('Name').text
    valuelast = currencyback.find('Value').text
    res1.append({'Name':namelast,'Value':valuelast})

bot = Bot(token)
dp = Dispatcher(bot)
kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
b1 = types.KeyboardButton('/Currency')
kb.add(b1)


@dp.message_handler(Command('start') | Text(equals=['–ø—Ä–∏–≤–µ—Ç','–ü—Ä–∏–≤–µ—Ç','–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ','–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ','–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π','–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π','–ó–¥–∞—Ä–æ–≤–∞','–∑–¥–∞—Ä–æ–≤–∞','–¥–æ–±—Ä—ã–π –¥–µ–Ω—å','–î–æ–±—Ä—ã–π –¥–µ–Ω—å','–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä','–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä']))
async def start_command(message:types.Message):
    await bot.send_message(chat_id=message.chat.id,
                           text = '<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –î–∞–Ω–Ω—ã–π –±–æ—Ç –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫—É—Ä—Å –≤–∞–ª—é—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–µ. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–æ—è–≤–∏–≤—à—É—é—Å—è –∫–Ω–æ–ø–∫—É —Ä—è–¥–æ–º —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.\n–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞, —Ç–æ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å /description</b>',
                           parse_mode='html',reply_markup=kb)
    await message.delete()


@dp.message_handler(commands=['description'])
async def descr_command(message:types.Message):
    await bot.send_message(chat_id=message.from_user.id,text = '<b>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–π –≤–∞–º –≤–∞–ª—é—Ç—ã. (–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º –∑–∞–Ω–æ–≤–æ, –ø–æ–∑–¥–æ—Ä–æ–≤–∞–π—Ç–µ—Å—å —Å –Ω–∏–º)</b>',parse_mode='html')
    keyboard1 = types.InlineKeyboardMarkup()
    help_button = types.InlineKeyboardButton(text='–í–∞–ª—é—Ç—ã',callback_data='help_button')
    keyboard1.add(help_button)
    await bot.send_message(chat_id=message.chat.id,text='<b><em>–£–∑–Ω–∞—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç</em></b>',parse_mode='html',reply_markup=keyboard1)
    await message.delete()
    await bot.send_message(chat_id=message.chat.id,text='üí∞')

@dp.message_handler(commands=['currency'])
async def help_command(message:types.Message):
    keyboard = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton(text='–î–æ–ª–ª–∞—Ä –°–®–ê',callback_data='button1')
    button2 = types.InlineKeyboardButton(text='–ï–≤—Ä–æ', callback_data='button2')
    button3 = types.InlineKeyboardButton(text='–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å', callback_data='button3')
    button4 = types.InlineKeyboardButton(text='–ö–∏—Ç–∞–π—Å–∫–∏–π —é–∞–Ω—å', callback_data='button4')
    button5 = types.InlineKeyboardButton(text='–§—É–Ω—Ç —Å—Ç–µ—Ä–ª–∏–Ω–≥–æ–≤', callback_data='button5')
    button6 = types.InlineKeyboardButton(text='–î–∏—Ä—Ö–∞–º –û–ê–≠', callback_data='button6')
    button7 = types.InlineKeyboardButton(text='–í—ã–π—Ç–∏',callback_data='button7')
    keyboard.add(button1,button2)
    keyboard.add(button3,button4)
    keyboard.add(button5,button6)
    keyboard.add(button7)
    await bot.send_message(chat_id=message.chat.id,text='<b><em>–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É</em></b>',parse_mode='html',reply_markup=keyboard)
    await message.delete()


@dp.callback_query_handler(lambda query: query.data == 'help_button')
async def button1_answer(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await help_command(callback_query.message)


@dp.callback_query_handler(lambda query: query.data == 'button7')
async def button7_answer(callback_query:types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await start_command(callback_query.message)


@dp.callback_query_handler(lambda query: query.data == 'button1')
async def button1_answer(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id,f"<b>–ö—É—Ä—Å {res[13]['Name']} - {res[13]['Value'][:5]} –†—É–±\n–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä—ã–Ω–∫–∞ –∑–∞ –ø—Ä–æ—à–µ–¥—à–∏–π –º–µ—Å—è—Ü:\n–ö—É—Ä—Å {res1[13]['Name']} - {res1[13]['Value'][:5]} –†—É–±</b>",parse_mode='html')
    if float(res[13]['Value'][:5].replace(",","."))>float(res1[13]['Value'][:5].replace(",",".")):
        await bot.send_message(callback_query.from_user.id,f"<b>–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ {str(float(res[13]['Value'][:5].replace(',','.'))-float(res1[13]['Value'][:5].replace(',','.')))[:4]} –†—É–± "
                                                           f"({str((float(res[13]['Value'][:5].replace(',','.'))-float(res1[13]['Value'][:5].replace(',','.')))/float(res1[13]['Value'][:5].replace(',','.'))*100)[:4]}%)\n–°—Ç–æ–∏—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –Ω–∞–¥ —Ñ–∏–∫—Å–∞—Ü–∏–µ–π –ø—Ä–∏–±—ã–ª–∏</b>",parse_mode='html')
    else:
        await bot.send_message(callback_query.from_user.id,
                               f"<b>–£–º–µ–Ω—å—à–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ {str(float(res1[13]['Value'][:5].replace(',','.'))-float(res[13]['Value'][:5].replace(',','.')))[:4]} –†—É–± "
                               f"({str((float(res1[13]['Value'][:5].replace(',','.'))-float(res[13]['Value'][:5].replace(',','.')))/float(res[13]['Value'][:5].replace(',','.'))*100)[:4]}%)\n–°—Ç–æ–∏—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –Ω–∞–¥ –ø–æ–∫—É–ø–∫–æ–π –≤–∞–ª—é—Ç—ã</b>",
                               parse_mode='html')
    await bot.send_message(callback_query.from_user.id,text='üá∫üá∏')
    await help_command(callback_query.message)


@dp.callback_query_handler(lambda query: query.data == 'button2')
async def button2_answer(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id,f"<b>–ö—É—Ä—Å {res[14]['Name']} - {res[14]['Value'][:5]} –†—É–±\n–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä—ã–Ω–∫–∞ –∑–∞ –ø—Ä–æ—à–µ–¥—à–∏–π –º–µ—Å—è—Ü:\n–ö—É—Ä—Å {res1[14]['Name']} - {res1[14]['Value'][:5]} –†—É–±</b>",parse_mode='html')
    if float(res[14]['Value'][:5].replace(",","."))>float(res1[14]['Value'][:5].replace(",",".")):
        await bot.send_message(callback_query.from_user.id,f"<b>–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ {str(float(res[14]['Value'][:5].replace(',','.'))-float(res1[14]['Value'][:5].replace(',','.')))[:4]} –†—É–± "
                                                           f"({str((float(res[14]['Value'][:5].replace(',','.'))-float(res1[14]['Value'][:5].replace(',','.')))/float(res1[14]['Value'][:5].replace(',','.'))*100)[:4]}%)\n–°—Ç–æ–∏—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –Ω–∞–¥ —Ñ–∏–∫—Å–∞—Ü–∏–µ–π –ø—Ä–∏–±—ã–ª–∏</b>",parse_mode='html')
    else:
        await bot.send_message(callback_query.from_user.id,
                               f"<b>–£–º–µ–Ω—å—à–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ {str(float(res1[14]['Value'][:5].replace(',','.'))-float(res[14]['Value'][:5].replace(',','.')))[:4]} –†—É–± "
                               f"({str((float(res1[14]['Value'][:5].replace(',','.'))-float(res[14]['Value'][:5].replace(',','.')))/float(res[14]['Value'][:5].replace(',','.'))*100)[:4]}%)\n–°—Ç–æ–∏—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –Ω–∞–¥ –ø–æ–∫—É–ø–∫–æ–π –≤–∞–ª—é—Ç—ã</b>",
                               parse_mode='html')
    await bot.send_message(callback_query.from_user.id,text='üá™üá∫')
    await help_command(callback_query.message)


@dp.callback_query_handler(lambda query: query.data == 'button3')
async def button3_answer(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id,f"<b>–ö—É—Ä—Å {res[4]['Name']} - {res[4]['Value'][:5]} –†—É–±\n–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä—ã–Ω–∫–∞ –∑–∞ –ø—Ä–æ—à–µ–¥—à–∏–π –º–µ—Å—è—Ü:\n–ö—É—Ä—Å {res1[4]['Name']} - {res1[4]['Value'][:5]} –†—É–±</b>",parse_mode='html')
    if float(res[4]['Value'][:5].replace(",","."))>float(res1[4]['Value'][:5].replace(",",".")):
        await bot.send_message(callback_query.from_user.id,f"<b>–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ {str(float(res[4]['Value'][:5].replace(',','.'))-float(res1[4]['Value'][:5].replace(',','.')))[:4]} –†—É–± "
                                                           f"({str((float(res[4]['Value'][:5].replace(',','.'))-float(res1[4]['Value'][:5].replace(',','.')))/float(res1[4]['Value'][:5].replace(',','.'))*100)[:4]}%)\n–°—Ç–æ–∏—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –Ω–∞–¥ —Ñ–∏–∫—Å–∞—Ü–∏–µ–π –ø—Ä–∏–±—ã–ª–∏</b>",parse_mode='html')
    else:
        await bot.send_message(callback_query.from_user.id,
                               f"<b>–£–º–µ–Ω—å—à–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ {str(float(res1[4]['Value'][:5].replace(',','.'))-float(res[4]['Value'][:5].replace(',','.')))[:4]} –†—É–± "
                               f"({str((float(res1[4]['Value'][:5].replace(',','.'))-float(res[4]['Value'][:5].replace(',','.')))/float(res[4]['Value'][:5].replace(',','.'))*100)[:4]}%)\n–°—Ç–æ–∏—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –Ω–∞–¥ –ø–æ–∫—É–ø–∫–æ–π –≤–∞–ª—é—Ç—ã</b>",
                               parse_mode='html')
    await bot.send_message(callback_query.from_user.id,text='üáßüáæ')
    await help_command(callback_query.message)


@dp.callback_query_handler(lambda query: query.data == 'button4')
async def button4_answer(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id,f"<b>–ö—É—Ä—Å {res[22]['Name']} - {res[22]['Value'][:5]} –†—É–±\n–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä—ã–Ω–∫–∞ –∑–∞ –ø—Ä–æ—à–µ–¥—à–∏–π –º–µ—Å—è—Ü:\n–ö—É—Ä—Å {res1[22]['Name']} - {res1[22]['Value'][:5]} –†—É–±</b>",parse_mode='html')
    if float(res[22]['Value'][:5].replace(",","."))>float(res1[22]['Value'][:5].replace(",",".")):
        await bot.send_message(callback_query.from_user.id,f"<b>–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ {str(float(res[22]['Value'][:5].replace(',','.'))-float(res1[22]['Value'][:5].replace(',','.')))[:4]} –†—É–± "
                                                           f"({str((float(res[22]['Value'][:5].replace(',','.'))-float(res1[22]['Value'][:5].replace(',','.')))/float(res1[22]['Value'][:5].replace(',','.'))*100)[:4]}%)\n–°—Ç–æ–∏—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –Ω–∞–¥ —Ñ–∏–∫—Å–∞—Ü–∏–µ–π –ø—Ä–∏–±—ã–ª–∏</b>",parse_mode='html')
    else:
        await bot.send_message(callback_query.from_user.id,
                               f"<b>–£–º–µ–Ω—å—à–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ {str(float(res1[22]['Value'][:5].replace(',','.'))-float(res[22]['Value'][:5].replace(',','.')))[:4]} –†—É–± "
                               f"({str((float(res1[22]['Value'][:5].replace(',','.'))-float(res[22]['Value'][:5].replace(',','.')))/float(res[22]['Value'][:5].replace(',','.'))*100)[:4]}%)\n–°—Ç–æ–∏—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –Ω–∞–¥ –ø–æ–∫—É–ø–∫–æ–π –≤–∞–ª—é—Ç—ã</b>",
                               parse_mode='html')
    await bot.send_message(callback_query.from_user.id,text='üá®üá≥')
    await help_command(callback_query.message)


@dp.callback_query_handler(lambda query: query.data == 'button5')
async def button5_answer(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id,f"<b>–ö—É—Ä—Å {res[2]['Name']} - {res[2]['Value'][:5]} –†—É–±\n–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä—ã–Ω–∫–∞ –∑–∞ –ø—Ä–æ—à–µ–¥—à–∏–π –º–µ—Å—è—Ü:\n–ö—É—Ä—Å {res1[2]['Name']} - {res1[2]['Value'][:5]} –†—É–±</b>",parse_mode='html')
    if float(res[2]['Value'][:5].replace(",","."))>float(res1[2]['Value'][:5].replace(",",".")):
        await bot.send_message(callback_query.from_user.id,f"<b>–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ {str(float(res[2]['Value'][:5].replace(',','.'))-float(res1[2]['Value'][:5].replace(',','.')))[:4]} –†—É–± "
                                                           f"({str((float(res[2]['Value'][:5].replace(',','.'))-float(res1[2]['Value'][:5].replace(',','.')))/float(res1[2]['Value'][:5].replace(',','.'))*100)[:4]}%)\n–°—Ç–æ–∏—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –Ω–∞–¥ —Ñ–∏–∫—Å–∞—Ü–∏–µ–π –ø—Ä–∏–±—ã–ª–∏</b>",parse_mode='html')
    else:
        await bot.send_message(callback_query.from_user.id,
                               f"<b>–£–º–µ–Ω—å—à–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ {str(float(res1[2]['Value'][:5].replace(',','.'))-float(res[2]['Value'][:5].replace(',','.')))[:4]} –†—É–± "
                               f"({str((float(res1[2]['Value'][:5].replace(',','.'))-float(res[2]['Value'][:5].replace(',','.')))/float(res[2]['Value'][:5].replace(',','.'))*100)[:4]}%)\n–°—Ç–æ–∏—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –Ω–∞–¥ –ø–æ–∫—É–ø–∫–æ–π –≤–∞–ª—é—Ç—ã</b>",
                               parse_mode='html')
    await bot.send_message(callback_query.from_user.id,text='üá¨üáß')
    await help_command(callback_query.message)


@dp.callback_query_handler(lambda query: query.data == 'button6')
async def button6_answer(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id,f"<b>–ö—É—Ä—Å {res[12]['Name']} - {res[12]['Value'][:5]} –†—É–±\n–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä—ã–Ω–∫–∞ –∑–∞ –ø—Ä–æ—à–µ–¥—à–∏–π –º–µ—Å—è—Ü:\n–ö—É—Ä—Å {res1[12]['Name']} - {res1[12]['Value'][:5]} –†—É–±</b>",parse_mode='html')
    if float(res[12]['Value'][:5].replace(",","."))>float(res1[12]['Value'][:5].replace(",",".")):
        await bot.send_message(callback_query.from_user.id,f"<b>–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ {str(float(res[12]['Value'][:5].replace(',','.'))-float(res1[12]['Value'][:5].replace(',','.')))[:4]} –†—É–± "
                                                           f"({str((float(res[12]['Value'][:5].replace(',','.'))-float(res1[12]['Value'][:5].replace(',','.')))/float(res1[12]['Value'][:5].replace(',','.'))*100)[:4]}%)\n–°—Ç–æ–∏—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –Ω–∞–¥ —Ñ–∏–∫—Å–∞—Ü–∏–µ–π –ø—Ä–∏–±—ã–ª–∏</b>",parse_mode='html')
    else:
        await bot.send_message(callback_query.from_user.id,
                               f"<b>–£–º–µ–Ω—å—à–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ {str(float(res1[12]['Value'][:5].replace(',','.'))-float(res[12]['Value'][:5].replace(',','.')))[:4]} –†—É–± "
                               f"({str((float(res1[12]['Value'][:5].replace(',','.'))-float(res[12]['Value'][:5].replace(',','.')))/float(res[12]['Value'][:5].replace(',','.'))*100)[:4]}%)\n–°—Ç–æ–∏—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –Ω–∞–¥ –ø–æ–∫—É–ø–∫–æ–π –≤–∞–ª—é—Ç—ã</b>",
                               parse_mode='html')
    await bot.send_message(callback_query.from_user.id,text='üá¶üá™')
    await help_command(callback_query.message)


if __name__ == '__main__':
    executor.start_polling(dp,skip_updates=True)
